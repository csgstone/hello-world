

message DragonBonesData {
  required string version = 1;
  required string name = 2;
  required int32  frameRate =3;
  repeated ArmatureData armatureDataList = 4;
}


message ArmatureData{
  required string name = 1;
  repeated BoneData  boneDataList = 2;
  repeated SkinData  skinDataList = 3;
  repeated AnimationData  animationDataList = 4;
}


message BoneData{
  required string name = 1;
  optional string parent = 2;
  optional float length =3;
  optional bool inheritRotation = 4;
  optional bool inheritScale = 5;
  optional Transform global = 6;

}

message SkinData{
  required string name = 1;
  repeated SlotData slotDataList = 2;
}

message SlotData{
  required string name = 1;
  required string parent = 2;
  required float zOrder = 3;
  optional int32 blendMode = 4;
  repeated DisplayData displayDataList = 5;
}

message DisplayData{
  required string name = 1;
  required int32 type = 2;
  required bool scalingGrid = 3;
  optional int32 scalingGridLeft =4;
  optional int32 scalingGridRight =5;
  optional int32 scalingGridTop =6;
  optional int32 scalingGridBottom =7;
  optional Transform transform=8;
  optional Point pivot=9;
}

message AnimationData{
  required string name = 1;
  //required int32  frameRate =2;
  required int32  duration = 3;
  required int32  playTimes = 4;
  required float  fadeTime=5;
  required float  scale = 6;
  required float  tweenEasing=7;
  required bool   autoTween = 8;
  repeated Frame  frameList = 9;
  repeated TransformTimeline timelineList = 10;
}

message Frame{
  required int32 duration = 1;
  optional string action = 2;
  optional string event =3;
  optional string sound = 4;
}

message TransformTimeline{
  required string name = 1;
  required float scale = 2;
  required float offset = 3;
  //optional float duration = 4;
  repeated TransformFrame frameList = 5;
}

message TransformFrame{
  required int32 duration = 1;
  optional string action = 2;
  optional string event =3;
  optional string sound = 4;
  optional bool visible = 5;
  optional float tweenEasing = 6;
  optional int32 tweenRotate = 7;
  optional bool tweenScale = 8;
  optional int32 displayIndex = 9;
  optional float zOrder = 10;
  optional Transform global = 11;
  optional Point pivot = 12;
  optional Point scaleOffset = 13;
  optional ColorTransform color = 14;
}


message Transform{
  required float x = 1;
  required float y = 2;
  required float skewX = 3;
  required float skewY = 4;
  required float scaleX = 5;
  required float scaleY = 6;
}

message ColorTransform
{
  optional int32 alphaOffset = 1;
  optional int32 redOffset = 2;
  optional int32 greenOffset = 3;
  optional int32 blueOffset = 4;
  optional float alphaMultiplier = 5;
  optional float redMultiplier = 6;
  optional float greenMultiplier = 7;
  optional float blueMultiplier = 8;
}

message Point
{
  required float x = 1;
  required float y = 2;
}